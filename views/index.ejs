<!DOCTYPE html>
<html>
    <head>
        <title>View Outputs</title>
        <link rel="stylesheet" href="/style.css">
        <link rel="stylesheet" href="/styles/solarized-dark.css">
        <script src="/highlight.pack.js"></script>
        <script src="/socket.io/socket.io.js"></script>
    </head>
    <body>
        <nav>
            <a onclick="clearLogs()" href="javascript:void(0);" class="button default">Clear</a>&nbsp;<a onclick="testMessage()" href="javascript:void(0);" class="button primary">Test Message</a>
        </nav>
        <div id="container">
            <div class="output">
                <a onclick="clearLine(this)" class="button default" href="javascript:void(0)">click to delete ❌</a>
                <pre id="init">
                    <code class="json">
                    </code>
                </pre>
            </div>
        </div>
        <script type="text/javascript">
            window.onload = function () {
                var pre = document.getElementById("init");
                var code = pre.querySelector("code");
                var data = {
                    message: "A request will appear here",
                    data: {
                        close: "click close button to delete line"
                    }
                }
                code.innerHTML = JSON.stringify(data, null, 2);
                hljs.highlightBlock(code);
            }
            
             // api address
            var api_address = 'http://localhost:3002/';
            var socket = io.connect(api_address);

            // clear all logs
            function clearLogs() {
                var el = document.getElementById('container');
                el.innerHTML = "";
            }

            // clear single log
            function clearLine(el) {
                var parentEl = el.parentElement.parentElement;
                parentEl.removeChild(el.parentElement);
            }

            // create button with prefered btnName, and assign clear current log
            function createButton(node, btnName) {
                var btn = document.createElement("a");
                btn.setAttribute("class", "button default");
                btn.setAttribute("href", "javascript:void(0)");
                btn.innerHTML = btnName;
                btn.onclick = function () {
                    clearLine(node);
                }
                return btn;
            }
            
            // main function
            function appendMessage(msg) {
                var el = document.getElementById('container');
                var node = document.createElement("div");
                node.classList.add("output");
                
                var preNode = document.createElement("pre");
                var codeNode = document.createElement("code");
                codeNode.classList.add("json");
                codeNode.innerHTML = JSON.stringify(msg, null, 2);

                preNode.appendChild(codeNode);
                
                var btnName = msg.date + " ❌";
                node.appendChild(createButton(preNode, btnName));
                node.appendChild(preNode);
                el.appendChild(node);

                // scroll
                window.scrollTo(0, document.body.scrollHeight);

                hljs.highlightBlock(preNode);

            }

            // socket listener
            socket.on('body_result', (msg) => {
                appendMessage(msg);
            });

            // test message
            function testMessage() {
                let data = {
                    message: 'A test message invoked!'
                };
                _testTracker.track(data);
            }

            var _testTracker = {
                track: (data) => {
                    fetch(api_address, {
                        method: 'POST',
                        mode: 'cors',
                        cache: 'no-cache',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(data)
                    })
                    .then({})
                    .catch(err => { console.error(err) });
                }
            }

        </script>
    </body>
</html>